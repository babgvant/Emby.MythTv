//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace babgvant.Emby.MythTv.MythTvUtility {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ConnectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.VersionInfo VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.DatabaseInfo DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.WOLInfo WOLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public babgvant.Emby.MythTv.MythTvUtility.VersionInfo Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public babgvant.Emby.MythTv.MythTvUtility.DatabaseInfo Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public babgvant.Emby.MythTv.MythTvUtility.WOLInfo WOL {
            get {
                return this.WOLField;
            }
            set {
                if ((object.ReferenceEquals(this.WOLField, value) != true)) {
                    this.WOLField = value;
                    this.RaisePropertyChanged("WOL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class VersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Binary {
            get {
                return this.BinaryField;
            }
            set {
                if ((object.ReferenceEquals(this.BinaryField, value) != true)) {
                    this.BinaryField = value;
                    this.RaisePropertyChanged("Binary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Schema {
            get {
                return this.SchemaField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemaField, value) != true)) {
                    this.SchemaField = value;
                    this.RaisePropertyChanged("Schema");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatabaseInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class DatabaseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalHostNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Ping {
            get {
                return this.PingField;
            }
            set {
                if ((this.PingField.Equals(value) != true)) {
                    this.PingField = value;
                    this.RaisePropertyChanged("Ping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool LocalEnabled {
            get {
                return this.LocalEnabledField;
            }
            set {
                if ((this.LocalEnabledField.Equals(value) != true)) {
                    this.LocalEnabledField = value;
                    this.RaisePropertyChanged("LocalEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string LocalHostName {
            get {
                return this.LocalHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalHostNameField, value) != true)) {
                    this.LocalHostNameField = value;
                    this.RaisePropertyChanged("LocalHostName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WOLInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class WOLInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReconnectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reconnect {
            get {
                return this.ReconnectField;
            }
            set {
                if ((this.ReconnectField.Equals(value) != true)) {
                    this.ReconnectField = value;
                    this.RaisePropertyChanged("Reconnect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Retry {
            get {
                return this.RetryField;
            }
            set {
                if ((this.RetryField.Equals(value) != true)) {
                    this.RetryField = value;
                    this.RaisePropertyChanged("Retry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://mythtv.org", ItemName="String")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogMessageList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class LogMessageList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.LabelValue[] HostNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.LabelValue[] ApplicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.LogMessage[] LogMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvUtility.LabelValue[] HostNames {
            get {
                return this.HostNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNamesField, value) != true)) {
                    this.HostNamesField = value;
                    this.RaisePropertyChanged("HostNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public babgvant.Emby.MythTv.MythTvUtility.LabelValue[] Applications {
            get {
                return this.ApplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationsField, value) != true)) {
                    this.ApplicationsField = value;
                    this.RaisePropertyChanged("Applications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public babgvant.Emby.MythTv.MythTvUtility.LogMessage[] LogMessages {
            get {
                return this.LogMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.LogMessagesField, value) != true)) {
                    this.LogMessagesField = value;
                    this.RaisePropertyChanged("LogMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabelValue", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class LabelValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogMessage", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class LogMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TID {
            get {
                return this.TIDField;
            }
            set {
                if ((this.TIDField.Equals(value) != true)) {
                    this.TIDField = value;
                    this.RaisePropertyChanged("TID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Thread {
            get {
                return this.ThreadField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadField, value) != true)) {
                    this.ThreadField = value;
                    this.RaisePropertyChanged("Thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int Line {
            get {
                return this.LineField;
            }
            set {
                if ((this.LineField.Equals(value) != true)) {
                    this.LineField = value;
                    this.RaisePropertyChanged("Line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Function {
            get {
                return this.FunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionField, value) != true)) {
                    this.FunctionField = value;
                    this.RaisePropertyChanged("Function");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<System.DateTime> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class SettingList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.MapOfStringString SettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvUtility.MapOfStringString Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MapOfStringString", Namespace="http://mythtv.org", ItemName="String", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class MapOfStringString : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageGroupDirList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class StorageGroupDirList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvUtility.StorageGroupDir[] StorageGroupDirsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvUtility.StorageGroupDir[] StorageGroupDirs {
            get {
                return this.StorageGroupDirsField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageGroupDirsField, value) != true)) {
                    this.StorageGroupDirsField = value;
                    this.RaisePropertyChanged("StorageGroupDirs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageGroupDir", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class StorageGroupDir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string DirName {
            get {
                return this.DirNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirNameField, value) != true)) {
                    this.DirNameField = value;
                    this.RaisePropertyChanged("DirName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeZoneInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class TimeZoneInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UTCOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrentDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TimeZoneID {
            get {
                return this.TimeZoneIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneIDField, value) != true)) {
                    this.TimeZoneIDField = value;
                    this.RaisePropertyChanged("TimeZoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UTCOffset {
            get {
                return this.UTCOffsetField;
            }
            set {
                if ((this.UTCOffsetField.Equals(value) != true)) {
                    this.UTCOffsetField = value;
                    this.RaisePropertyChanged("UTCOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.DateTime> CurrentDateTime {
            get {
                return this.CurrentDateTimeField;
            }
            set {
                if ((this.CurrentDateTimeField.Equals(value) != true)) {
                    this.CurrentDateTimeField = value;
                    this.RaisePropertyChanged("CurrentDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mythtv.org", ConfigurationName="MythTvUtility.Myth")]
    public interface Myth {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/AddStorageGroupDir", ReplyAction="http://mythtv.org/Myth/AddStorageGroupDirResponse")]
        System.Nullable<bool> AddStorageGroupDir(string GroupName, string DirName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/AddStorageGroupDir", ReplyAction="http://mythtv.org/Myth/AddStorageGroupDirResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> AddStorageGroupDirAsync(string GroupName, string DirName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/BackupDatabase", ReplyAction="http://mythtv.org/Myth/BackupDatabaseResponse")]
        System.Nullable<bool> BackupDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/BackupDatabase", ReplyAction="http://mythtv.org/Myth/BackupDatabaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> BackupDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ChangePassword", ReplyAction="http://mythtv.org/Myth/ChangePasswordResponse")]
        System.Nullable<bool> ChangePassword(string UserName, string OldPassword, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ChangePassword", ReplyAction="http://mythtv.org/Myth/ChangePasswordResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> ChangePasswordAsync(string UserName, string OldPassword, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/CheckDatabase", ReplyAction="http://mythtv.org/Myth/CheckDatabaseResponse")]
        System.Nullable<bool> CheckDatabase(System.Nullable<bool> Repair);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/CheckDatabase", ReplyAction="http://mythtv.org/Myth/CheckDatabaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> CheckDatabaseAsync(System.Nullable<bool> Repair);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetConnectionInfo", ReplyAction="http://mythtv.org/Myth/GetConnectionInfoResponse")]
        babgvant.Emby.MythTv.MythTvUtility.ConnectionInfo GetConnectionInfo(string Pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetConnectionInfo", ReplyAction="http://mythtv.org/Myth/GetConnectionInfoResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ConnectionInfo> GetConnectionInfoAsync(string Pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetHostName", ReplyAction="http://mythtv.org/Myth/GetHostNameResponse")]
        string GetHostName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetHostName", ReplyAction="http://mythtv.org/Myth/GetHostNameResponse")]
        System.Threading.Tasks.Task<string> GetHostNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetHosts", ReplyAction="http://mythtv.org/Myth/GetHostsResponse")]
        babgvant.Emby.MythTv.MythTvUtility.ArrayOfString GetHosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetHosts", ReplyAction="http://mythtv.org/Myth/GetHostsResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ArrayOfString> GetHostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetKeys", ReplyAction="http://mythtv.org/Myth/GetKeysResponse")]
        babgvant.Emby.MythTv.MythTvUtility.ArrayOfString GetKeys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetKeys", ReplyAction="http://mythtv.org/Myth/GetKeysResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ArrayOfString> GetKeysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetLogs", ReplyAction="http://mythtv.org/Myth/GetLogsResponse")]
        babgvant.Emby.MythTv.MythTvUtility.LogMessageList GetLogs(string HostName, string Application, System.Nullable<int> PID, System.Nullable<int> TID, string Thread, string Filename, System.Nullable<int> Line, string Function, System.Nullable<System.DateTime> FromTime, System.Nullable<System.DateTime> ToTime, string Level, string MsgContains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetLogs", ReplyAction="http://mythtv.org/Myth/GetLogsResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.LogMessageList> GetLogsAsync(string HostName, string Application, System.Nullable<int> PID, System.Nullable<int> TID, string Thread, string Filename, System.Nullable<int> Line, string Function, System.Nullable<System.DateTime> FromTime, System.Nullable<System.DateTime> ToTime, string Level, string MsgContains);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetSetting", ReplyAction="http://mythtv.org/Myth/GetSettingResponse")]
        babgvant.Emby.MythTv.MythTvUtility.SettingList GetSetting(string HostName, string Key, string Default);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetSetting", ReplyAction="http://mythtv.org/Myth/GetSettingResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.SettingList> GetSettingAsync(string HostName, string Key, string Default);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetStorageGroupDirs", ReplyAction="http://mythtv.org/Myth/GetStorageGroupDirsResponse")]
        babgvant.Emby.MythTv.MythTvUtility.StorageGroupDirList GetStorageGroupDirs(string GroupName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetStorageGroupDirs", ReplyAction="http://mythtv.org/Myth/GetStorageGroupDirsResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.StorageGroupDirList> GetStorageGroupDirsAsync(string GroupName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetTimeZone", ReplyAction="http://mythtv.org/Myth/GetTimeZoneResponse")]
        babgvant.Emby.MythTv.MythTvUtility.TimeZoneInfo GetTimeZone();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/GetTimeZone", ReplyAction="http://mythtv.org/Myth/GetTimeZoneResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.TimeZoneInfo> GetTimeZoneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileDelete", ReplyAction="http://mythtv.org/Myth/ProfileDeleteResponse")]
        System.Nullable<bool> ProfileDelete();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileDelete", ReplyAction="http://mythtv.org/Myth/ProfileDeleteResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> ProfileDeleteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileSubmit", ReplyAction="http://mythtv.org/Myth/ProfileSubmitResponse")]
        System.Nullable<bool> ProfileSubmit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileSubmit", ReplyAction="http://mythtv.org/Myth/ProfileSubmitResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> ProfileSubmitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileText", ReplyAction="http://mythtv.org/Myth/ProfileTextResponse")]
        string ProfileText();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileText", ReplyAction="http://mythtv.org/Myth/ProfileTextResponse")]
        System.Threading.Tasks.Task<string> ProfileTextAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileURL", ReplyAction="http://mythtv.org/Myth/ProfileURLResponse")]
        string ProfileURL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileURL", ReplyAction="http://mythtv.org/Myth/ProfileURLResponse")]
        System.Threading.Tasks.Task<string> ProfileURLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileUpdated", ReplyAction="http://mythtv.org/Myth/ProfileUpdatedResponse")]
        string ProfileUpdated();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/ProfileUpdated", ReplyAction="http://mythtv.org/Myth/ProfileUpdatedResponse")]
        System.Threading.Tasks.Task<string> ProfileUpdatedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/PutSetting", ReplyAction="http://mythtv.org/Myth/PutSettingResponse")]
        System.Nullable<bool> PutSetting(string HostName, string Key, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/PutSetting", ReplyAction="http://mythtv.org/Myth/PutSettingResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> PutSettingAsync(string HostName, string Key, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/RemoveStorageGroupDir", ReplyAction="http://mythtv.org/Myth/RemoveStorageGroupDirResponse")]
        System.Nullable<bool> RemoveStorageGroupDir(string GroupName, string DirName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/RemoveStorageGroupDir", ReplyAction="http://mythtv.org/Myth/RemoveStorageGroupDirResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> RemoveStorageGroupDirAsync(string GroupName, string DirName, string HostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/SendMessage", ReplyAction="http://mythtv.org/Myth/SendMessageResponse")]
        System.Nullable<bool> SendMessage(string Message, string Address, System.Nullable<int> udpPort, System.Nullable<int> Timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/SendMessage", ReplyAction="http://mythtv.org/Myth/SendMessageResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> SendMessageAsync(string Message, string Address, System.Nullable<int> udpPort, System.Nullable<int> Timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/SendNotification", ReplyAction="http://mythtv.org/Myth/SendNotificationResponse")]
        System.Nullable<bool> SendNotification(System.Nullable<bool> Error, string Type, string Message, string Origin, string Description, string Image, string Extra, string ProgressText, System.Nullable<float> Progress, System.Nullable<int> Timeout, System.Nullable<bool> Fullscreen, System.Nullable<uint> Visibility, System.Nullable<uint> Priority, string Address, System.Nullable<int> udpPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/SendNotification", ReplyAction="http://mythtv.org/Myth/SendNotificationResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> SendNotificationAsync(System.Nullable<bool> Error, string Type, string Message, string Origin, string Description, string Image, string Extra, string ProgressText, System.Nullable<float> Progress, System.Nullable<int> Timeout, System.Nullable<bool> Fullscreen, System.Nullable<uint> Visibility, System.Nullable<uint> Priority, string Address, System.Nullable<int> udpPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/TestDBSettings", ReplyAction="http://mythtv.org/Myth/TestDBSettingsResponse")]
        System.Nullable<bool> TestDBSettings(string HostName, string UserName, string Password, string DBName, System.Nullable<int> dbPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Myth/TestDBSettings", ReplyAction="http://mythtv.org/Myth/TestDBSettingsResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> TestDBSettingsAsync(string HostName, string UserName, string Password, string DBName, System.Nullable<int> dbPort);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MythChannel : babgvant.Emby.MythTv.MythTvUtility.Myth, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MythClient : System.ServiceModel.ClientBase<babgvant.Emby.MythTv.MythTvUtility.Myth>, babgvant.Emby.MythTv.MythTvUtility.Myth {
        
        public MythClient() {
        }
        
        public MythClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MythClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MythClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MythClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<bool> AddStorageGroupDir(string GroupName, string DirName, string HostName) {
            return base.Channel.AddStorageGroupDir(GroupName, DirName, HostName);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> AddStorageGroupDirAsync(string GroupName, string DirName, string HostName) {
            return base.Channel.AddStorageGroupDirAsync(GroupName, DirName, HostName);
        }
        
        public System.Nullable<bool> BackupDatabase() {
            return base.Channel.BackupDatabase();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> BackupDatabaseAsync() {
            return base.Channel.BackupDatabaseAsync();
        }
        
        public System.Nullable<bool> ChangePassword(string UserName, string OldPassword, string NewPassword) {
            return base.Channel.ChangePassword(UserName, OldPassword, NewPassword);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> ChangePasswordAsync(string UserName, string OldPassword, string NewPassword) {
            return base.Channel.ChangePasswordAsync(UserName, OldPassword, NewPassword);
        }
        
        public System.Nullable<bool> CheckDatabase(System.Nullable<bool> Repair) {
            return base.Channel.CheckDatabase(Repair);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> CheckDatabaseAsync(System.Nullable<bool> Repair) {
            return base.Channel.CheckDatabaseAsync(Repair);
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.ConnectionInfo GetConnectionInfo(string Pin) {
            return base.Channel.GetConnectionInfo(Pin);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ConnectionInfo> GetConnectionInfoAsync(string Pin) {
            return base.Channel.GetConnectionInfoAsync(Pin);
        }
        
        public string GetHostName() {
            return base.Channel.GetHostName();
        }
        
        public System.Threading.Tasks.Task<string> GetHostNameAsync() {
            return base.Channel.GetHostNameAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.ArrayOfString GetHosts() {
            return base.Channel.GetHosts();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ArrayOfString> GetHostsAsync() {
            return base.Channel.GetHostsAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.ArrayOfString GetKeys() {
            return base.Channel.GetKeys();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.ArrayOfString> GetKeysAsync() {
            return base.Channel.GetKeysAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.LogMessageList GetLogs(string HostName, string Application, System.Nullable<int> PID, System.Nullable<int> TID, string Thread, string Filename, System.Nullable<int> Line, string Function, System.Nullable<System.DateTime> FromTime, System.Nullable<System.DateTime> ToTime, string Level, string MsgContains) {
            return base.Channel.GetLogs(HostName, Application, PID, TID, Thread, Filename, Line, Function, FromTime, ToTime, Level, MsgContains);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.LogMessageList> GetLogsAsync(string HostName, string Application, System.Nullable<int> PID, System.Nullable<int> TID, string Thread, string Filename, System.Nullable<int> Line, string Function, System.Nullable<System.DateTime> FromTime, System.Nullable<System.DateTime> ToTime, string Level, string MsgContains) {
            return base.Channel.GetLogsAsync(HostName, Application, PID, TID, Thread, Filename, Line, Function, FromTime, ToTime, Level, MsgContains);
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.SettingList GetSetting(string HostName, string Key, string Default) {
            return base.Channel.GetSetting(HostName, Key, Default);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.SettingList> GetSettingAsync(string HostName, string Key, string Default) {
            return base.Channel.GetSettingAsync(HostName, Key, Default);
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.StorageGroupDirList GetStorageGroupDirs(string GroupName, string HostName) {
            return base.Channel.GetStorageGroupDirs(GroupName, HostName);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.StorageGroupDirList> GetStorageGroupDirsAsync(string GroupName, string HostName) {
            return base.Channel.GetStorageGroupDirsAsync(GroupName, HostName);
        }
        
        public babgvant.Emby.MythTv.MythTvUtility.TimeZoneInfo GetTimeZone() {
            return base.Channel.GetTimeZone();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvUtility.TimeZoneInfo> GetTimeZoneAsync() {
            return base.Channel.GetTimeZoneAsync();
        }
        
        public System.Nullable<bool> ProfileDelete() {
            return base.Channel.ProfileDelete();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> ProfileDeleteAsync() {
            return base.Channel.ProfileDeleteAsync();
        }
        
        public System.Nullable<bool> ProfileSubmit() {
            return base.Channel.ProfileSubmit();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> ProfileSubmitAsync() {
            return base.Channel.ProfileSubmitAsync();
        }
        
        public string ProfileText() {
            return base.Channel.ProfileText();
        }
        
        public System.Threading.Tasks.Task<string> ProfileTextAsync() {
            return base.Channel.ProfileTextAsync();
        }
        
        public string ProfileURL() {
            return base.Channel.ProfileURL();
        }
        
        public System.Threading.Tasks.Task<string> ProfileURLAsync() {
            return base.Channel.ProfileURLAsync();
        }
        
        public string ProfileUpdated() {
            return base.Channel.ProfileUpdated();
        }
        
        public System.Threading.Tasks.Task<string> ProfileUpdatedAsync() {
            return base.Channel.ProfileUpdatedAsync();
        }
        
        public System.Nullable<bool> PutSetting(string HostName, string Key, string Value) {
            return base.Channel.PutSetting(HostName, Key, Value);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> PutSettingAsync(string HostName, string Key, string Value) {
            return base.Channel.PutSettingAsync(HostName, Key, Value);
        }
        
        public System.Nullable<bool> RemoveStorageGroupDir(string GroupName, string DirName, string HostName) {
            return base.Channel.RemoveStorageGroupDir(GroupName, DirName, HostName);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> RemoveStorageGroupDirAsync(string GroupName, string DirName, string HostName) {
            return base.Channel.RemoveStorageGroupDirAsync(GroupName, DirName, HostName);
        }
        
        public System.Nullable<bool> SendMessage(string Message, string Address, System.Nullable<int> udpPort, System.Nullable<int> Timeout) {
            return base.Channel.SendMessage(Message, Address, udpPort, Timeout);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> SendMessageAsync(string Message, string Address, System.Nullable<int> udpPort, System.Nullable<int> Timeout) {
            return base.Channel.SendMessageAsync(Message, Address, udpPort, Timeout);
        }
        
        public System.Nullable<bool> SendNotification(System.Nullable<bool> Error, string Type, string Message, string Origin, string Description, string Image, string Extra, string ProgressText, System.Nullable<float> Progress, System.Nullable<int> Timeout, System.Nullable<bool> Fullscreen, System.Nullable<uint> Visibility, System.Nullable<uint> Priority, string Address, System.Nullable<int> udpPort) {
            return base.Channel.SendNotification(Error, Type, Message, Origin, Description, Image, Extra, ProgressText, Progress, Timeout, Fullscreen, Visibility, Priority, Address, udpPort);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> SendNotificationAsync(System.Nullable<bool> Error, string Type, string Message, string Origin, string Description, string Image, string Extra, string ProgressText, System.Nullable<float> Progress, System.Nullable<int> Timeout, System.Nullable<bool> Fullscreen, System.Nullable<uint> Visibility, System.Nullable<uint> Priority, string Address, System.Nullable<int> udpPort) {
            return base.Channel.SendNotificationAsync(Error, Type, Message, Origin, Description, Image, Extra, ProgressText, Progress, Timeout, Fullscreen, Visibility, Priority, Address, udpPort);
        }
        
        public System.Nullable<bool> TestDBSettings(string HostName, string UserName, string Password, string DBName, System.Nullable<int> dbPort) {
            return base.Channel.TestDBSettings(HostName, UserName, Password, DBName, dbPort);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> TestDBSettingsAsync(string HostName, string UserName, string Password, string DBName, System.Nullable<int> dbPort) {
            return base.Channel.TestDBSettingsAsync(HostName, UserName, Password, DBName, dbPort);
        }
    }
}
