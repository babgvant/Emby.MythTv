//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace babgvant.Emby.MythTv.MythTvContent {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiveStreamInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class LiveStreamInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitrateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioBitrateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSegmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartSegmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentSegmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativeURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioOnlyBitrateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int Bitrate {
            get {
                return this.BitrateField;
            }
            set {
                if ((this.BitrateField.Equals(value) != true)) {
                    this.BitrateField = value;
                    this.RaisePropertyChanged("Bitrate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int AudioBitrate {
            get {
                return this.AudioBitrateField;
            }
            set {
                if ((this.AudioBitrateField.Equals(value) != true)) {
                    this.AudioBitrateField = value;
                    this.RaisePropertyChanged("AudioBitrate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SegmentSize {
            get {
                return this.SegmentSizeField;
            }
            set {
                if ((this.SegmentSizeField.Equals(value) != true)) {
                    this.SegmentSizeField = value;
                    this.RaisePropertyChanged("SegmentSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int MaxSegments {
            get {
                return this.MaxSegmentsField;
            }
            set {
                if ((this.MaxSegmentsField.Equals(value) != true)) {
                    this.MaxSegmentsField = value;
                    this.RaisePropertyChanged("MaxSegments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int StartSegment {
            get {
                return this.StartSegmentField;
            }
            set {
                if ((this.StartSegmentField.Equals(value) != true)) {
                    this.StartSegmentField = value;
                    this.RaisePropertyChanged("StartSegment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int CurrentSegment {
            get {
                return this.CurrentSegmentField;
            }
            set {
                if ((this.CurrentSegmentField.Equals(value) != true)) {
                    this.CurrentSegmentField = value;
                    this.RaisePropertyChanged("CurrentSegment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int SegmentCount {
            get {
                return this.SegmentCountField;
            }
            set {
                if ((this.SegmentCountField.Equals(value) != true)) {
                    this.SegmentCountField = value;
                    this.RaisePropertyChanged("SegmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int PercentComplete {
            get {
                return this.PercentCompleteField;
            }
            set {
                if ((this.PercentCompleteField.Equals(value) != true)) {
                    this.PercentCompleteField = value;
                    this.RaisePropertyChanged("PercentComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string RelativeURL {
            get {
                return this.RelativeURLField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativeURLField, value) != true)) {
                    this.RelativeURLField = value;
                    this.RaisePropertyChanged("RelativeURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string FullURL {
            get {
                return this.FullURLField;
            }
            set {
                if ((object.ReferenceEquals(this.FullURLField, value) != true)) {
                    this.FullURLField = value;
                    this.RaisePropertyChanged("FullURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string StatusStr {
            get {
                return this.StatusStrField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusStrField, value) != true)) {
                    this.StatusStrField = value;
                    this.RaisePropertyChanged("StatusStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int StatusInt {
            get {
                return this.StatusIntField;
            }
            set {
                if ((this.StatusIntField.Equals(value) != true)) {
                    this.StatusIntField = value;
                    this.RaisePropertyChanged("StatusInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string SourceFile {
            get {
                return this.SourceFileField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFileField, value) != true)) {
                    this.SourceFileField = value;
                    this.RaisePropertyChanged("SourceFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string SourceHost {
            get {
                return this.SourceHostField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceHostField, value) != true)) {
                    this.SourceHostField = value;
                    this.RaisePropertyChanged("SourceHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int SourceWidth {
            get {
                return this.SourceWidthField;
            }
            set {
                if ((this.SourceWidthField.Equals(value) != true)) {
                    this.SourceWidthField = value;
                    this.RaisePropertyChanged("SourceWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int SourceHeight {
            get {
                return this.SourceHeightField;
            }
            set {
                if ((this.SourceHeightField.Equals(value) != true)) {
                    this.SourceHeightField = value;
                    this.RaisePropertyChanged("SourceHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int AudioOnlyBitrate {
            get {
                return this.AudioOnlyBitrateField;
            }
            set {
                if ((this.AudioOnlyBitrateField.Equals(value) != true)) {
                    this.AudioOnlyBitrateField = value;
                    this.RaisePropertyChanged("AudioOnlyBitrate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://mythtv.org", ItemName="String")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiveStreamInfoList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class LiveStreamInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo[] LiveStreamInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo[] LiveStreamInfos {
            get {
                return this.LiveStreamInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveStreamInfosField, value) != true)) {
                    this.LiveStreamInfosField = value;
                    this.RaisePropertyChanged("LiveStreamInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtworkInfoList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ArtworkInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvContent.ArtworkInfo[] ArtworkInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvContent.ArtworkInfo[] ArtworkInfos {
            get {
                return this.ArtworkInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtworkInfosField, value) != true)) {
                    this.ArtworkInfosField = value;
                    this.RaisePropertyChanged("ArtworkInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtworkInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ArtworkInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string StorageGroup {
            get {
                return this.StorageGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageGroupField, value) != true)) {
                    this.StorageGroupField = value;
                    this.RaisePropertyChanged("StorageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mythtv.org", ConfigurationName="MythTvContent.Content")]
    public interface Content {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddLiveStream", ReplyAction="http://mythtv.org/Content/AddLiveStreamResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddLiveStream(string StorageGroup, string FileName, string HostName, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddLiveStream", ReplyAction="http://mythtv.org/Content/AddLiveStreamResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddLiveStreamAsync(string StorageGroup, string FileName, string HostName, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddRecordingLiveStream", ReplyAction="http://mythtv.org/Content/AddRecordingLiveStreamResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddRecordingLiveStream(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddRecordingLiveStream", ReplyAction="http://mythtv.org/Content/AddRecordingLiveStreamResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddRecordingLiveStreamAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddVideoLiveStream", ReplyAction="http://mythtv.org/Content/AddVideoLiveStreamResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddVideoLiveStream(System.Nullable<int> Id, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/AddVideoLiveStream", ReplyAction="http://mythtv.org/Content/AddVideoLiveStreamResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddVideoLiveStreamAsync(System.Nullable<int> Id, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/DownloadFile", ReplyAction="http://mythtv.org/Content/DownloadFileResponse")]
        System.Nullable<bool> DownloadFile(string URL, string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/DownloadFile", ReplyAction="http://mythtv.org/Content/DownloadFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> DownloadFileAsync(string URL, string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetAlbumArt", ReplyAction="http://mythtv.org/Content/GetAlbumArtResponse")]
        string GetAlbumArt(System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetAlbumArt", ReplyAction="http://mythtv.org/Content/GetAlbumArtResponse")]
        System.Threading.Tasks.Task<string> GetAlbumArtAsync(System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetFile", ReplyAction="http://mythtv.org/Content/GetFileResponse")]
        string GetFile(string StorageGroup, string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetFile", ReplyAction="http://mythtv.org/Content/GetFileResponse")]
        System.Threading.Tasks.Task<string> GetFileAsync(string StorageGroup, string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetFileList", ReplyAction="http://mythtv.org/Content/GetFileListResponse")]
        babgvant.Emby.MythTv.MythTvContent.ArrayOfString GetFileList(string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetFileList", ReplyAction="http://mythtv.org/Content/GetFileListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArrayOfString> GetFileListAsync(string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetHash", ReplyAction="http://mythtv.org/Content/GetHashResponse")]
        string GetHash(string StorageGroup, string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetHash", ReplyAction="http://mythtv.org/Content/GetHashResponse")]
        System.Threading.Tasks.Task<string> GetHashAsync(string StorageGroup, string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetImageFile", ReplyAction="http://mythtv.org/Content/GetImageFileResponse")]
        string GetImageFile(string StorageGroup, string FileName, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetImageFile", ReplyAction="http://mythtv.org/Content/GetImageFileResponse")]
        System.Threading.Tasks.Task<string> GetImageFileAsync(string StorageGroup, string FileName, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetLiveStream", ReplyAction="http://mythtv.org/Content/GetLiveStreamResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo GetLiveStream(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetLiveStream", ReplyAction="http://mythtv.org/Content/GetLiveStreamResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> GetLiveStreamAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetLiveStreamList", ReplyAction="http://mythtv.org/Content/GetLiveStreamListResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfoList GetLiveStreamList(string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetLiveStreamList", ReplyAction="http://mythtv.org/Content/GetLiveStreamListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfoList> GetLiveStreamListAsync(string FileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetMusic", ReplyAction="http://mythtv.org/Content/GetMusicResponse")]
        string GetMusic(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetMusic", ReplyAction="http://mythtv.org/Content/GetMusicResponse")]
        System.Threading.Tasks.Task<string> GetMusicAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetPreviewImage", ReplyAction="http://mythtv.org/Content/GetPreviewImageResponse")]
        string GetPreviewImage(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> SecsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetPreviewImage", ReplyAction="http://mythtv.org/Content/GetPreviewImageResponse")]
        System.Threading.Tasks.Task<string> GetPreviewImageAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> SecsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetProgramArtworkList", ReplyAction="http://mythtv.org/Content/GetProgramArtworkListResponse")]
        babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList GetProgramArtworkList(string Inetref, System.Nullable<int> Season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetProgramArtworkList", ReplyAction="http://mythtv.org/Content/GetProgramArtworkListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList> GetProgramArtworkListAsync(string Inetref, System.Nullable<int> Season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecording", ReplyAction="http://mythtv.org/Content/GetRecordingResponse")]
        string GetRecording(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecording", ReplyAction="http://mythtv.org/Content/GetRecordingResponse")]
        System.Threading.Tasks.Task<string> GetRecordingAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecordingArtwork", ReplyAction="http://mythtv.org/Content/GetRecordingArtworkResponse")]
        string GetRecordingArtwork(string Type, string Inetref, System.Nullable<int> Season, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecordingArtwork", ReplyAction="http://mythtv.org/Content/GetRecordingArtworkResponse")]
        System.Threading.Tasks.Task<string> GetRecordingArtworkAsync(string Type, string Inetref, System.Nullable<int> Season, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecordingArtworkList", ReplyAction="http://mythtv.org/Content/GetRecordingArtworkListResponse")]
        babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList GetRecordingArtworkList(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetRecordingArtworkList", ReplyAction="http://mythtv.org/Content/GetRecordingArtworkListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList> GetRecordingArtworkListAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetVideo", ReplyAction="http://mythtv.org/Content/GetVideoResponse")]
        string GetVideo(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetVideo", ReplyAction="http://mythtv.org/Content/GetVideoResponse")]
        System.Threading.Tasks.Task<string> GetVideoAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetVideoArtwork", ReplyAction="http://mythtv.org/Content/GetVideoArtworkResponse")]
        string GetVideoArtwork(string Type, System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/GetVideoArtwork", ReplyAction="http://mythtv.org/Content/GetVideoArtworkResponse")]
        System.Threading.Tasks.Task<string> GetVideoArtworkAsync(string Type, System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/RemoveLiveStream", ReplyAction="http://mythtv.org/Content/RemoveLiveStreamResponse")]
        System.Nullable<bool> RemoveLiveStream(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/RemoveLiveStream", ReplyAction="http://mythtv.org/Content/RemoveLiveStreamResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> RemoveLiveStreamAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/StopLiveStream", ReplyAction="http://mythtv.org/Content/StopLiveStreamResponse")]
        babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo StopLiveStream(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Content/StopLiveStream", ReplyAction="http://mythtv.org/Content/StopLiveStreamResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> StopLiveStreamAsync(System.Nullable<int> Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ContentChannel : babgvant.Emby.MythTv.MythTvContent.Content, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentClient : System.ServiceModel.ClientBase<babgvant.Emby.MythTv.MythTvContent.Content>, babgvant.Emby.MythTv.MythTvContent.Content {
        
        public ContentClient() {
        }
        
        public ContentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddLiveStream(string StorageGroup, string FileName, string HostName, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddLiveStream(StorageGroup, FileName, HostName, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddLiveStreamAsync(string StorageGroup, string FileName, string HostName, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddLiveStreamAsync(StorageGroup, FileName, HostName, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddRecordingLiveStream(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddRecordingLiveStream(ChanId, StartTime, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddRecordingLiveStreamAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddRecordingLiveStreamAsync(ChanId, StartTime, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo AddVideoLiveStream(System.Nullable<int> Id, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddVideoLiveStream(Id, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> AddVideoLiveStreamAsync(System.Nullable<int> Id, System.Nullable<int> MaxSegments, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> Bitrate, System.Nullable<int> AudioBitrate, System.Nullable<int> SampleRate) {
            return base.Channel.AddVideoLiveStreamAsync(Id, MaxSegments, Width, Height, Bitrate, AudioBitrate, SampleRate);
        }
        
        public System.Nullable<bool> DownloadFile(string URL, string StorageGroup) {
            return base.Channel.DownloadFile(URL, StorageGroup);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> DownloadFileAsync(string URL, string StorageGroup) {
            return base.Channel.DownloadFileAsync(URL, StorageGroup);
        }
        
        public string GetAlbumArt(System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetAlbumArt(Id, Width, Height);
        }
        
        public System.Threading.Tasks.Task<string> GetAlbumArtAsync(System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetAlbumArtAsync(Id, Width, Height);
        }
        
        public string GetFile(string StorageGroup, string FileName) {
            return base.Channel.GetFile(StorageGroup, FileName);
        }
        
        public System.Threading.Tasks.Task<string> GetFileAsync(string StorageGroup, string FileName) {
            return base.Channel.GetFileAsync(StorageGroup, FileName);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.ArrayOfString GetFileList(string StorageGroup) {
            return base.Channel.GetFileList(StorageGroup);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArrayOfString> GetFileListAsync(string StorageGroup) {
            return base.Channel.GetFileListAsync(StorageGroup);
        }
        
        public string GetHash(string StorageGroup, string FileName) {
            return base.Channel.GetHash(StorageGroup, FileName);
        }
        
        public System.Threading.Tasks.Task<string> GetHashAsync(string StorageGroup, string FileName) {
            return base.Channel.GetHashAsync(StorageGroup, FileName);
        }
        
        public string GetImageFile(string StorageGroup, string FileName, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetImageFile(StorageGroup, FileName, Width, Height);
        }
        
        public System.Threading.Tasks.Task<string> GetImageFileAsync(string StorageGroup, string FileName, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetImageFileAsync(StorageGroup, FileName, Width, Height);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo GetLiveStream(System.Nullable<int> Id) {
            return base.Channel.GetLiveStream(Id);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> GetLiveStreamAsync(System.Nullable<int> Id) {
            return base.Channel.GetLiveStreamAsync(Id);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfoList GetLiveStreamList(string FileName) {
            return base.Channel.GetLiveStreamList(FileName);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfoList> GetLiveStreamListAsync(string FileName) {
            return base.Channel.GetLiveStreamListAsync(FileName);
        }
        
        public string GetMusic(System.Nullable<int> Id) {
            return base.Channel.GetMusic(Id);
        }
        
        public System.Threading.Tasks.Task<string> GetMusicAsync(System.Nullable<int> Id) {
            return base.Channel.GetMusicAsync(Id);
        }
        
        public string GetPreviewImage(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> SecsIn) {
            return base.Channel.GetPreviewImage(ChanId, StartTime, Width, Height, SecsIn);
        }
        
        public System.Threading.Tasks.Task<string> GetPreviewImageAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<int> Width, System.Nullable<int> Height, System.Nullable<int> SecsIn) {
            return base.Channel.GetPreviewImageAsync(ChanId, StartTime, Width, Height, SecsIn);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList GetProgramArtworkList(string Inetref, System.Nullable<int> Season) {
            return base.Channel.GetProgramArtworkList(Inetref, Season);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList> GetProgramArtworkListAsync(string Inetref, System.Nullable<int> Season) {
            return base.Channel.GetProgramArtworkListAsync(Inetref, Season);
        }
        
        public string GetRecording(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecording(ChanId, StartTime);
        }
        
        public System.Threading.Tasks.Task<string> GetRecordingAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecordingAsync(ChanId, StartTime);
        }
        
        public string GetRecordingArtwork(string Type, string Inetref, System.Nullable<int> Season, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetRecordingArtwork(Type, Inetref, Season, Width, Height);
        }
        
        public System.Threading.Tasks.Task<string> GetRecordingArtworkAsync(string Type, string Inetref, System.Nullable<int> Season, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetRecordingArtworkAsync(Type, Inetref, Season, Width, Height);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList GetRecordingArtworkList(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecordingArtworkList(ChanId, StartTime);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.ArtworkInfoList> GetRecordingArtworkListAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecordingArtworkListAsync(ChanId, StartTime);
        }
        
        public string GetVideo(System.Nullable<int> Id) {
            return base.Channel.GetVideo(Id);
        }
        
        public System.Threading.Tasks.Task<string> GetVideoAsync(System.Nullable<int> Id) {
            return base.Channel.GetVideoAsync(Id);
        }
        
        public string GetVideoArtwork(string Type, System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetVideoArtwork(Type, Id, Width, Height);
        }
        
        public System.Threading.Tasks.Task<string> GetVideoArtworkAsync(string Type, System.Nullable<int> Id, System.Nullable<int> Width, System.Nullable<int> Height) {
            return base.Channel.GetVideoArtworkAsync(Type, Id, Width, Height);
        }
        
        public System.Nullable<bool> RemoveLiveStream(System.Nullable<int> Id) {
            return base.Channel.RemoveLiveStream(Id);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> RemoveLiveStreamAsync(System.Nullable<int> Id) {
            return base.Channel.RemoveLiveStreamAsync(Id);
        }
        
        public babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo StopLiveStream(System.Nullable<int> Id) {
            return base.Channel.StopLiveStream(Id);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvContent.LiveStreamInfo> StopLiveStreamAsync(System.Nullable<int> Id) {
            return base.Channel.StopLiveStreamAsync(Id);
        }
    }
}
