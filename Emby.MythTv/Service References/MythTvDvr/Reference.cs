//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace babgvant.Emby.MythTv.MythTvDvr {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ProgramList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AsOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtoVerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.Program[] ProgramsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int TotalAvailable {
            get {
                return this.TotalAvailableField;
            }
            set {
                if ((this.TotalAvailableField.Equals(value) != true)) {
                    this.TotalAvailableField = value;
                    this.RaisePropertyChanged("TotalAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.DateTime> AsOf {
            get {
                return this.AsOfField;
            }
            set {
                if ((this.AsOfField.Equals(value) != true)) {
                    this.AsOfField = value;
                    this.RaisePropertyChanged("AsOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ProtoVer {
            get {
                return this.ProtoVerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtoVerField, value) != true)) {
                    this.ProtoVerField = value;
                    this.RaisePropertyChanged("ProtoVer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public babgvant.Emby.MythTv.MythTvDvr.Program[] Programs {
            get {
                return this.ProgramsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramsField, value) != true)) {
                    this.ProgramsField = value;
                    this.RaisePropertyChanged("Programs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Program", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class Program : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RepeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoPropsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioPropsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubPropsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AirdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InetrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EpisodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.ChannelInfo ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.RecordingInfo RecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.ArtworkInfoList ArtworkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string CatType {
            get {
                return this.CatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CatTypeField, value) != true)) {
                    this.CatTypeField = value;
                    this.RaisePropertyChanged("CatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool Repeat {
            get {
                return this.RepeatField;
            }
            set {
                if ((this.RepeatField.Equals(value) != true)) {
                    this.RepeatField = value;
                    this.RaisePropertyChanged("Repeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int VideoProps {
            get {
                return this.VideoPropsField;
            }
            set {
                if ((this.VideoPropsField.Equals(value) != true)) {
                    this.VideoPropsField = value;
                    this.RaisePropertyChanged("VideoProps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int AudioProps {
            get {
                return this.AudioPropsField;
            }
            set {
                if ((this.AudioPropsField.Equals(value) != true)) {
                    this.AudioPropsField = value;
                    this.RaisePropertyChanged("AudioProps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int SubProps {
            get {
                return this.SubPropsField;
            }
            set {
                if ((this.SubPropsField.Equals(value) != true)) {
                    this.SubPropsField = value;
                    this.RaisePropertyChanged("SubProps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string SeriesId {
            get {
                return this.SeriesIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesIdField, value) != true)) {
                    this.SeriesIdField = value;
                    this.RaisePropertyChanged("SeriesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramIdField, value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public double Stars {
            get {
                return this.StarsField;
            }
            set {
                if ((this.StarsField.Equals(value) != true)) {
                    this.StarsField = value;
                    this.RaisePropertyChanged("Stars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public int ProgramFlags {
            get {
                return this.ProgramFlagsField;
            }
            set {
                if ((this.ProgramFlagsField.Equals(value) != true)) {
                    this.ProgramFlagsField = value;
                    this.RaisePropertyChanged("ProgramFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string Airdate {
            get {
                return this.AirdateField;
            }
            set {
                if ((object.ReferenceEquals(this.AirdateField, value) != true)) {
                    this.AirdateField = value;
                    this.RaisePropertyChanged("Airdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public string Inetref {
            get {
                return this.InetrefField;
            }
            set {
                if ((object.ReferenceEquals(this.InetrefField, value) != true)) {
                    this.InetrefField = value;
                    this.RaisePropertyChanged("Inetref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((this.SeasonField.Equals(value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int Episode {
            get {
                return this.EpisodeField;
            }
            set {
                if ((this.EpisodeField.Equals(value) != true)) {
                    this.EpisodeField = value;
                    this.RaisePropertyChanged("Episode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public babgvant.Emby.MythTv.MythTvDvr.ChannelInfo Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public babgvant.Emby.MythTv.MythTvDvr.RecordingInfo Recording {
            get {
                return this.RecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingField, value) != true)) {
                    this.RecordingField = value;
                    this.RaisePropertyChanged("Recording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public babgvant.Emby.MythTv.MythTvDvr.ArtworkInfoList Artwork {
            get {
                return this.ArtworkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtworkField, value) != true)) {
                    this.ArtworkField = value;
                    this.RaisePropertyChanged("Artwork");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ChannelInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ChanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChanNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint MplexIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TransportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint NetworkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ATSCMajorChanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ATSCMinorChanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FineTuneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SIStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChanFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InputIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseEITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLTVIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultAuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.Program[] ProgramsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ChanId {
            get {
                return this.ChanIdField;
            }
            set {
                if ((this.ChanIdField.Equals(value) != true)) {
                    this.ChanIdField = value;
                    this.RaisePropertyChanged("ChanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ChanNum {
            get {
                return this.ChanNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ChanNumField, value) != true)) {
                    this.ChanNumField = value;
                    this.RaisePropertyChanged("ChanNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string CallSign {
            get {
                return this.CallSignField;
            }
            set {
                if ((object.ReferenceEquals(this.CallSignField, value) != true)) {
                    this.CallSignField = value;
                    this.RaisePropertyChanged("CallSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IconURL {
            get {
                return this.IconURLField;
            }
            set {
                if ((object.ReferenceEquals(this.IconURLField, value) != true)) {
                    this.IconURLField = value;
                    this.RaisePropertyChanged("IconURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ChannelName {
            get {
                return this.ChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNameField, value) != true)) {
                    this.ChannelNameField = value;
                    this.RaisePropertyChanged("ChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public uint MplexId {
            get {
                return this.MplexIdField;
            }
            set {
                if ((this.MplexIdField.Equals(value) != true)) {
                    this.MplexIdField = value;
                    this.RaisePropertyChanged("MplexId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public uint TransportId {
            get {
                return this.TransportIdField;
            }
            set {
                if ((this.TransportIdField.Equals(value) != true)) {
                    this.TransportIdField = value;
                    this.RaisePropertyChanged("TransportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public uint ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public uint NetworkId {
            get {
                return this.NetworkIdField;
            }
            set {
                if ((this.NetworkIdField.Equals(value) != true)) {
                    this.NetworkIdField = value;
                    this.RaisePropertyChanged("NetworkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public uint ATSCMajorChan {
            get {
                return this.ATSCMajorChanField;
            }
            set {
                if ((this.ATSCMajorChanField.Equals(value) != true)) {
                    this.ATSCMajorChanField = value;
                    this.RaisePropertyChanged("ATSCMajorChan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public uint ATSCMinorChan {
            get {
                return this.ATSCMinorChanField;
            }
            set {
                if ((this.ATSCMinorChanField.Equals(value) != true)) {
                    this.ATSCMinorChanField = value;
                    this.RaisePropertyChanged("ATSCMinorChan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string Modulation {
            get {
                return this.ModulationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulationField, value) != true)) {
                    this.ModulationField = value;
                    this.RaisePropertyChanged("Modulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public long Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string FrequencyId {
            get {
                return this.FrequencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyIdField, value) != true)) {
                    this.FrequencyIdField = value;
                    this.RaisePropertyChanged("FrequencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string FrequencyTable {
            get {
                return this.FrequencyTableField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyTableField, value) != true)) {
                    this.FrequencyTableField = value;
                    this.RaisePropertyChanged("FrequencyTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int FineTune {
            get {
                return this.FineTuneField;
            }
            set {
                if ((this.FineTuneField.Equals(value) != true)) {
                    this.FineTuneField = value;
                    this.RaisePropertyChanged("FineTune");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string SIStandard {
            get {
                return this.SIStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.SIStandardField, value) != true)) {
                    this.SIStandardField = value;
                    this.RaisePropertyChanged("SIStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string ChanFilters {
            get {
                return this.ChanFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.ChanFiltersField, value) != true)) {
                    this.ChanFiltersField = value;
                    this.RaisePropertyChanged("ChanFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int InputId {
            get {
                return this.InputIdField;
            }
            set {
                if ((this.InputIdField.Equals(value) != true)) {
                    this.InputIdField = value;
                    this.RaisePropertyChanged("InputId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int CommFree {
            get {
                return this.CommFreeField;
            }
            set {
                if ((this.CommFreeField.Equals(value) != true)) {
                    this.CommFreeField = value;
                    this.RaisePropertyChanged("CommFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public bool UseEIT {
            get {
                return this.UseEITField;
            }
            set {
                if ((this.UseEITField.Equals(value) != true)) {
                    this.UseEITField = value;
                    this.RaisePropertyChanged("UseEIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string XMLTVID {
            get {
                return this.XMLTVIDField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLTVIDField, value) != true)) {
                    this.XMLTVIDField = value;
                    this.RaisePropertyChanged("XMLTVID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public string DefaultAuth {
            get {
                return this.DefaultAuthField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultAuthField, value) != true)) {
                    this.DefaultAuthField = value;
                    this.RaisePropertyChanged("DefaultAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=26)]
        public babgvant.Emby.MythTv.MythTvDvr.Program[] Programs {
            get {
                return this.ProgramsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramsField, value) != true)) {
                    this.ProgramsField = value;
                    this.RaisePropertyChanged("Programs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class RecordingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DupInTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DupMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EncoderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.DateTime> StartTs {
            get {
                return this.StartTsField;
            }
            set {
                if ((this.StartTsField.Equals(value) != true)) {
                    this.StartTsField = value;
                    this.RaisePropertyChanged("StartTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.DateTime> EndTs {
            get {
                return this.EndTsField;
            }
            set {
                if ((this.EndTsField.Equals(value) != true)) {
                    this.EndTsField = value;
                    this.RaisePropertyChanged("EndTs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string RecGroup {
            get {
                return this.RecGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.RecGroupField, value) != true)) {
                    this.RecGroupField = value;
                    this.RaisePropertyChanged("RecGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string PlayGroup {
            get {
                return this.PlayGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayGroupField, value) != true)) {
                    this.PlayGroupField = value;
                    this.RaisePropertyChanged("PlayGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string StorageGroup {
            get {
                return this.StorageGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageGroupField, value) != true)) {
                    this.StorageGroupField = value;
                    this.RaisePropertyChanged("StorageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int RecType {
            get {
                return this.RecTypeField;
            }
            set {
                if ((this.RecTypeField.Equals(value) != true)) {
                    this.RecTypeField = value;
                    this.RaisePropertyChanged("RecType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int DupInType {
            get {
                return this.DupInTypeField;
            }
            set {
                if ((this.DupInTypeField.Equals(value) != true)) {
                    this.DupInTypeField = value;
                    this.RaisePropertyChanged("DupInType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int DupMethod {
            get {
                return this.DupMethodField;
            }
            set {
                if ((this.DupMethodField.Equals(value) != true)) {
                    this.DupMethodField = value;
                    this.RaisePropertyChanged("DupMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int EncoderId {
            get {
                return this.EncoderIdField;
            }
            set {
                if ((this.EncoderIdField.Equals(value) != true)) {
                    this.EncoderIdField = value;
                    this.RaisePropertyChanged("EncoderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtworkInfoList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ArtworkInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.ArtworkInfo[] ArtworkInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvDvr.ArtworkInfo[] ArtworkInfos {
            get {
                return this.ArtworkInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtworkInfosField, value) != true)) {
                    this.ArtworkInfosField = value;
                    this.RaisePropertyChanged("ArtworkInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtworkInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class ArtworkInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string StorageGroup {
            get {
                return this.StorageGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageGroupField, value) != true)) {
                    this.StorageGroupField = value;
                    this.RaisePropertyChanged("StorageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncoderList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class EncoderList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.Encoder[] EncodersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvDvr.Encoder[] Encoders {
            get {
                return this.EncodersField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodersField, value) != true)) {
                    this.EncodersField = value;
                    this.RaisePropertyChanged("Encoders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Encoder", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class Encoder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SleepStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LowOnFreeSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.Program RecordingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool Local {
            get {
                return this.LocalField;
            }
            set {
                if ((this.LocalField.Equals(value) != true)) {
                    this.LocalField = value;
                    this.RaisePropertyChanged("Local");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Connected {
            get {
                return this.ConnectedField;
            }
            set {
                if ((this.ConnectedField.Equals(value) != true)) {
                    this.ConnectedField = value;
                    this.RaisePropertyChanged("Connected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SleepStatus {
            get {
                return this.SleepStatusField;
            }
            set {
                if ((this.SleepStatusField.Equals(value) != true)) {
                    this.SleepStatusField = value;
                    this.RaisePropertyChanged("SleepStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool LowOnFreeSpace {
            get {
                return this.LowOnFreeSpaceField;
            }
            set {
                if ((this.LowOnFreeSpaceField.Equals(value) != true)) {
                    this.LowOnFreeSpaceField = value;
                    this.RaisePropertyChanged("LowOnFreeSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public babgvant.Emby.MythTv.MythTvDvr.Program Recording {
            get {
                return this.RecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingField, value) != true)) {
                    this.RecordingField = value;
                    this.RaisePropertyChanged("Recording");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://mythtv.org", ItemName="String")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecRule", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class RecRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SeasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint EpisodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InetrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FindDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FindTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint PreferredInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DupMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DupInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoExpireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxEpisodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MaxNewestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoCommflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoTranscodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoMetaLookupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoUserJob1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoUserJob2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoUserJob3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoUserJob4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranscoderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastRecordedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AverageDelayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public uint Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((this.SeasonField.Equals(value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public uint Episode {
            get {
                return this.EpisodeField;
            }
            set {
                if ((this.EpisodeField.Equals(value) != true)) {
                    this.EpisodeField = value;
                    this.RaisePropertyChanged("Episode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string SeriesId {
            get {
                return this.SeriesIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesIdField, value) != true)) {
                    this.SeriesIdField = value;
                    this.RaisePropertyChanged("SeriesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramIdField, value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Inetref {
            get {
                return this.InetrefField;
            }
            set {
                if ((object.ReferenceEquals(this.InetrefField, value) != true)) {
                    this.InetrefField = value;
                    this.RaisePropertyChanged("Inetref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int ChanId {
            get {
                return this.ChanIdField;
            }
            set {
                if ((this.ChanIdField.Equals(value) != true)) {
                    this.ChanIdField = value;
                    this.RaisePropertyChanged("ChanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string CallSign {
            get {
                return this.CallSignField;
            }
            set {
                if ((object.ReferenceEquals(this.CallSignField, value) != true)) {
                    this.CallSignField = value;
                    this.RaisePropertyChanged("CallSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int FindDay {
            get {
                return this.FindDayField;
            }
            set {
                if ((this.FindDayField.Equals(value) != true)) {
                    this.FindDayField = value;
                    this.RaisePropertyChanged("FindDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string FindTime {
            get {
                return this.FindTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.FindTimeField, value) != true)) {
                    this.FindTimeField = value;
                    this.RaisePropertyChanged("FindTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string SearchType {
            get {
                return this.SearchTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchTypeField, value) != true)) {
                    this.SearchTypeField = value;
                    this.RaisePropertyChanged("SearchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int RecPriority {
            get {
                return this.RecPriorityField;
            }
            set {
                if ((this.RecPriorityField.Equals(value) != true)) {
                    this.RecPriorityField = value;
                    this.RaisePropertyChanged("RecPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public uint PreferredInput {
            get {
                return this.PreferredInputField;
            }
            set {
                if ((this.PreferredInputField.Equals(value) != true)) {
                    this.PreferredInputField = value;
                    this.RaisePropertyChanged("PreferredInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int StartOffset {
            get {
                return this.StartOffsetField;
            }
            set {
                if ((this.StartOffsetField.Equals(value) != true)) {
                    this.StartOffsetField = value;
                    this.RaisePropertyChanged("StartOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public int EndOffset {
            get {
                return this.EndOffsetField;
            }
            set {
                if ((this.EndOffsetField.Equals(value) != true)) {
                    this.EndOffsetField = value;
                    this.RaisePropertyChanged("EndOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string DupMethod {
            get {
                return this.DupMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.DupMethodField, value) != true)) {
                    this.DupMethodField = value;
                    this.RaisePropertyChanged("DupMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public string DupIn {
            get {
                return this.DupInField;
            }
            set {
                if ((object.ReferenceEquals(this.DupInField, value) != true)) {
                    this.DupInField = value;
                    this.RaisePropertyChanged("DupIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public uint Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((this.FilterField.Equals(value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public string RecProfile {
            get {
                return this.RecProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.RecProfileField, value) != true)) {
                    this.RecProfileField = value;
                    this.RaisePropertyChanged("RecProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=28)]
        public string RecGroup {
            get {
                return this.RecGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.RecGroupField, value) != true)) {
                    this.RecGroupField = value;
                    this.RaisePropertyChanged("RecGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=29)]
        public string StorageGroup {
            get {
                return this.StorageGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageGroupField, value) != true)) {
                    this.StorageGroupField = value;
                    this.RaisePropertyChanged("StorageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=30)]
        public string PlayGroup {
            get {
                return this.PlayGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayGroupField, value) != true)) {
                    this.PlayGroupField = value;
                    this.RaisePropertyChanged("PlayGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public bool AutoExpire {
            get {
                return this.AutoExpireField;
            }
            set {
                if ((this.AutoExpireField.Equals(value) != true)) {
                    this.AutoExpireField = value;
                    this.RaisePropertyChanged("AutoExpire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public int MaxEpisodes {
            get {
                return this.MaxEpisodesField;
            }
            set {
                if ((this.MaxEpisodesField.Equals(value) != true)) {
                    this.MaxEpisodesField = value;
                    this.RaisePropertyChanged("MaxEpisodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public bool MaxNewest {
            get {
                return this.MaxNewestField;
            }
            set {
                if ((this.MaxNewestField.Equals(value) != true)) {
                    this.MaxNewestField = value;
                    this.RaisePropertyChanged("MaxNewest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public bool AutoCommflag {
            get {
                return this.AutoCommflagField;
            }
            set {
                if ((this.AutoCommflagField.Equals(value) != true)) {
                    this.AutoCommflagField = value;
                    this.RaisePropertyChanged("AutoCommflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public bool AutoTranscode {
            get {
                return this.AutoTranscodeField;
            }
            set {
                if ((this.AutoTranscodeField.Equals(value) != true)) {
                    this.AutoTranscodeField = value;
                    this.RaisePropertyChanged("AutoTranscode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public bool AutoMetaLookup {
            get {
                return this.AutoMetaLookupField;
            }
            set {
                if ((this.AutoMetaLookupField.Equals(value) != true)) {
                    this.AutoMetaLookupField = value;
                    this.RaisePropertyChanged("AutoMetaLookup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public bool AutoUserJob1 {
            get {
                return this.AutoUserJob1Field;
            }
            set {
                if ((this.AutoUserJob1Field.Equals(value) != true)) {
                    this.AutoUserJob1Field = value;
                    this.RaisePropertyChanged("AutoUserJob1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public bool AutoUserJob2 {
            get {
                return this.AutoUserJob2Field;
            }
            set {
                if ((this.AutoUserJob2Field.Equals(value) != true)) {
                    this.AutoUserJob2Field = value;
                    this.RaisePropertyChanged("AutoUserJob2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public bool AutoUserJob3 {
            get {
                return this.AutoUserJob3Field;
            }
            set {
                if ((this.AutoUserJob3Field.Equals(value) != true)) {
                    this.AutoUserJob3Field = value;
                    this.RaisePropertyChanged("AutoUserJob3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public bool AutoUserJob4 {
            get {
                return this.AutoUserJob4Field;
            }
            set {
                if ((this.AutoUserJob4Field.Equals(value) != true)) {
                    this.AutoUserJob4Field = value;
                    this.RaisePropertyChanged("AutoUserJob4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=41)]
        public int Transcoder {
            get {
                return this.TranscoderField;
            }
            set {
                if ((this.TranscoderField.Equals(value) != true)) {
                    this.TranscoderField = value;
                    this.RaisePropertyChanged("Transcoder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=42)]
        public System.Nullable<System.DateTime> NextRecording {
            get {
                return this.NextRecordingField;
            }
            set {
                if ((this.NextRecordingField.Equals(value) != true)) {
                    this.NextRecordingField = value;
                    this.RaisePropertyChanged("NextRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=43)]
        public System.Nullable<System.DateTime> LastRecorded {
            get {
                return this.LastRecordedField;
            }
            set {
                if ((this.LastRecordedField.Equals(value) != true)) {
                    this.LastRecordedField = value;
                    this.RaisePropertyChanged("LastRecorded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=44)]
        public System.Nullable<System.DateTime> LastDeleted {
            get {
                return this.LastDeletedField;
            }
            set {
                if ((this.LastDeletedField.Equals(value) != true)) {
                    this.LastDeletedField = value;
                    this.RaisePropertyChanged("LastDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=45)]
        public int AverageDelay {
            get {
                return this.AverageDelayField;
            }
            set {
                if ((this.AverageDelayField.Equals(value) != true)) {
                    this.AverageDelayField = value;
                    this.RaisePropertyChanged("AverageDelay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecRuleList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class RecRuleList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AsOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtoVerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.RecRule[] RecRulesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int TotalAvailable {
            get {
                return this.TotalAvailableField;
            }
            set {
                if ((this.TotalAvailableField.Equals(value) != true)) {
                    this.TotalAvailableField = value;
                    this.RaisePropertyChanged("TotalAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.DateTime> AsOf {
            get {
                return this.AsOfField;
            }
            set {
                if ((this.AsOfField.Equals(value) != true)) {
                    this.AsOfField = value;
                    this.RaisePropertyChanged("AsOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ProtoVer {
            get {
                return this.ProtoVerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtoVerField, value) != true)) {
                    this.ProtoVerField = value;
                    this.RaisePropertyChanged("ProtoVer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public babgvant.Emby.MythTv.MythTvDvr.RecRule[] RecRules {
            get {
                return this.RecRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecRulesField, value) != true)) {
                    this.RecRulesField = value;
                    this.RaisePropertyChanged("RecRules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TitleInfoList", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class TitleInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private babgvant.Emby.MythTv.MythTvDvr.TitleInfo[] TitleInfosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public babgvant.Emby.MythTv.MythTvDvr.TitleInfo[] TitleInfos {
            get {
                return this.TitleInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleInfosField, value) != true)) {
                    this.TitleInfosField = value;
                    this.RaisePropertyChanged("TitleInfos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TitleInfo", Namespace="http://mythtv.org")]
    [System.SerializableAttribute()]
    public partial class TitleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InetrefField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Inetref {
            get {
                return this.InetrefField;
            }
            set {
                if ((object.ReferenceEquals(this.InetrefField, value) != true)) {
                    this.InetrefField = value;
                    this.RaisePropertyChanged("Inetref");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mythtv.org", ConfigurationName="MythTvDvr.Dvr")]
    public interface Dvr {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/AddRecordSchedule", ReplyAction="http://mythtv.org/Dvr/AddRecordScheduleResponse")]
        System.Nullable<uint> AddRecordSchedule(
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<int> ParentId, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/AddRecordSchedule", ReplyAction="http://mythtv.org/Dvr/AddRecordScheduleResponse")]
        System.Threading.Tasks.Task<System.Nullable<uint>> AddRecordScheduleAsync(
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<int> ParentId, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/DisableRecordSchedule", ReplyAction="http://mythtv.org/Dvr/DisableRecordScheduleResponse")]
        System.Nullable<bool> DisableRecordSchedule(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/DisableRecordSchedule", ReplyAction="http://mythtv.org/Dvr/DisableRecordScheduleResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> DisableRecordScheduleAsync(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/EnableRecordSchedule", ReplyAction="http://mythtv.org/Dvr/EnableRecordScheduleResponse")]
        System.Nullable<bool> EnableRecordSchedule(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/EnableRecordSchedule", ReplyAction="http://mythtv.org/Dvr/EnableRecordScheduleResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> EnableRecordScheduleAsync(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetConflictList", ReplyAction="http://mythtv.org/Dvr/GetConflictListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ProgramList GetConflictList(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetConflictList", ReplyAction="http://mythtv.org/Dvr/GetConflictListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetConflictListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetEncoderList", ReplyAction="http://mythtv.org/Dvr/GetEncoderListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.EncoderList GetEncoderList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetEncoderList", ReplyAction="http://mythtv.org/Dvr/GetEncoderListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.EncoderList> GetEncoderListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetExpiringList", ReplyAction="http://mythtv.org/Dvr/GetExpiringListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ProgramList GetExpiringList(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetExpiringList", ReplyAction="http://mythtv.org/Dvr/GetExpiringListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetExpiringListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecGroupList", ReplyAction="http://mythtv.org/Dvr/GetRecGroupListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ArrayOfString GetRecGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecGroupList", ReplyAction="http://mythtv.org/Dvr/GetRecGroupListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ArrayOfString> GetRecGroupListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordSchedule", ReplyAction="http://mythtv.org/Dvr/GetRecordScheduleResponse")]
        babgvant.Emby.MythTv.MythTvDvr.RecRule GetRecordSchedule(System.Nullable<uint> RecordId, string Template, System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<bool> MakeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordSchedule", ReplyAction="http://mythtv.org/Dvr/GetRecordScheduleResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.RecRule> GetRecordScheduleAsync(System.Nullable<uint> RecordId, string Template, System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<bool> MakeOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordScheduleList", ReplyAction="http://mythtv.org/Dvr/GetRecordScheduleListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.RecRuleList GetRecordScheduleList(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordScheduleList", ReplyAction="http://mythtv.org/Dvr/GetRecordScheduleListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.RecRuleList> GetRecordScheduleListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecorded", ReplyAction="http://mythtv.org/Dvr/GetRecordedResponse")]
        babgvant.Emby.MythTv.MythTvDvr.Program GetRecorded(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecorded", ReplyAction="http://mythtv.org/Dvr/GetRecordedResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.Program> GetRecordedAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordedList", ReplyAction="http://mythtv.org/Dvr/GetRecordedListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ProgramList GetRecordedList(System.Nullable<bool> Descending, System.Nullable<int> StartIndex, System.Nullable<int> Count, string TitleRegEx, string RecGroup, string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetRecordedList", ReplyAction="http://mythtv.org/Dvr/GetRecordedListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetRecordedListAsync(System.Nullable<bool> Descending, System.Nullable<int> StartIndex, System.Nullable<int> Count, string TitleRegEx, string RecGroup, string StorageGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetTitleInfoList", ReplyAction="http://mythtv.org/Dvr/GetTitleInfoListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.TitleInfoList GetTitleInfoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetTitleInfoList", ReplyAction="http://mythtv.org/Dvr/GetTitleInfoListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.TitleInfoList> GetTitleInfoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetTitleList", ReplyAction="http://mythtv.org/Dvr/GetTitleListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ArrayOfString GetTitleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetTitleList", ReplyAction="http://mythtv.org/Dvr/GetTitleListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ArrayOfString> GetTitleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetUpcomingList", ReplyAction="http://mythtv.org/Dvr/GetUpcomingListResponse")]
        babgvant.Emby.MythTv.MythTvDvr.ProgramList GetUpcomingList(System.Nullable<int> StartIndex, System.Nullable<int> Count, System.Nullable<bool> ShowAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/GetUpcomingList", ReplyAction="http://mythtv.org/Dvr/GetUpcomingListResponse")]
        System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetUpcomingListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count, System.Nullable<bool> ShowAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/RemoveRecordSchedule", ReplyAction="http://mythtv.org/Dvr/RemoveRecordScheduleResponse")]
        System.Nullable<bool> RemoveRecordSchedule(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/RemoveRecordSchedule", ReplyAction="http://mythtv.org/Dvr/RemoveRecordScheduleResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> RemoveRecordScheduleAsync(System.Nullable<uint> RecordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/RemoveRecorded", ReplyAction="http://mythtv.org/Dvr/RemoveRecordedResponse")]
        System.Nullable<bool> RemoveRecorded(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/RemoveRecorded", ReplyAction="http://mythtv.org/Dvr/RemoveRecordedResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> RemoveRecordedAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/UpdateRecordSchedule", ReplyAction="http://mythtv.org/Dvr/UpdateRecordScheduleResponse")]
        System.Nullable<bool> UpdateRecordSchedule(
                    System.Nullable<uint> RecordId, 
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mythtv.org/Dvr/UpdateRecordSchedule", ReplyAction="http://mythtv.org/Dvr/UpdateRecordScheduleResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> UpdateRecordScheduleAsync(
                    System.Nullable<uint> RecordId, 
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DvrChannel : babgvant.Emby.MythTv.MythTvDvr.Dvr, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DvrClient : System.ServiceModel.ClientBase<babgvant.Emby.MythTv.MythTvDvr.Dvr>, babgvant.Emby.MythTv.MythTvDvr.Dvr {
        
        public DvrClient() {
        }
        
        public DvrClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DvrClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DvrClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DvrClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<uint> AddRecordSchedule(
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<int> ParentId, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder) {
            return base.Channel.AddRecordSchedule(Title, Subtitle, Description, Category, StartTime, EndTime, SeriesId, ProgramId, ChanId, Station, FindDay, FindTime, ParentId, Inactive, Season, Episode, Inetref, Type, SearchType, RecPriority, PreferredInput, StartOffset, EndOffset, DupMethod, DupIn, Filter, RecProfile, RecGroup, StorageGroup, PlayGroup, AutoExpire, MaxEpisodes, MaxNewest, AutoCommflag, AutoTranscode, AutoMetaLookup, AutoUserJob1, AutoUserJob2, AutoUserJob3, AutoUserJob4, Transcoder);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<uint>> AddRecordScheduleAsync(
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<int> ParentId, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder) {
            return base.Channel.AddRecordScheduleAsync(Title, Subtitle, Description, Category, StartTime, EndTime, SeriesId, ProgramId, ChanId, Station, FindDay, FindTime, ParentId, Inactive, Season, Episode, Inetref, Type, SearchType, RecPriority, PreferredInput, StartOffset, EndOffset, DupMethod, DupIn, Filter, RecProfile, RecGroup, StorageGroup, PlayGroup, AutoExpire, MaxEpisodes, MaxNewest, AutoCommflag, AutoTranscode, AutoMetaLookup, AutoUserJob1, AutoUserJob2, AutoUserJob3, AutoUserJob4, Transcoder);
        }
        
        public System.Nullable<bool> DisableRecordSchedule(System.Nullable<uint> RecordId) {
            return base.Channel.DisableRecordSchedule(RecordId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> DisableRecordScheduleAsync(System.Nullable<uint> RecordId) {
            return base.Channel.DisableRecordScheduleAsync(RecordId);
        }
        
        public System.Nullable<bool> EnableRecordSchedule(System.Nullable<uint> RecordId) {
            return base.Channel.EnableRecordSchedule(RecordId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> EnableRecordScheduleAsync(System.Nullable<uint> RecordId) {
            return base.Channel.EnableRecordScheduleAsync(RecordId);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ProgramList GetConflictList(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetConflictList(StartIndex, Count);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetConflictListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetConflictListAsync(StartIndex, Count);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.EncoderList GetEncoderList() {
            return base.Channel.GetEncoderList();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.EncoderList> GetEncoderListAsync() {
            return base.Channel.GetEncoderListAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ProgramList GetExpiringList(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetExpiringList(StartIndex, Count);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetExpiringListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetExpiringListAsync(StartIndex, Count);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ArrayOfString GetRecGroupList() {
            return base.Channel.GetRecGroupList();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ArrayOfString> GetRecGroupListAsync() {
            return base.Channel.GetRecGroupListAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.RecRule GetRecordSchedule(System.Nullable<uint> RecordId, string Template, System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<bool> MakeOverride) {
            return base.Channel.GetRecordSchedule(RecordId, Template, ChanId, StartTime, MakeOverride);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.RecRule> GetRecordScheduleAsync(System.Nullable<uint> RecordId, string Template, System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime, System.Nullable<bool> MakeOverride) {
            return base.Channel.GetRecordScheduleAsync(RecordId, Template, ChanId, StartTime, MakeOverride);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.RecRuleList GetRecordScheduleList(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetRecordScheduleList(StartIndex, Count);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.RecRuleList> GetRecordScheduleListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count) {
            return base.Channel.GetRecordScheduleListAsync(StartIndex, Count);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.Program GetRecorded(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecorded(ChanId, StartTime);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.Program> GetRecordedAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.GetRecordedAsync(ChanId, StartTime);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ProgramList GetRecordedList(System.Nullable<bool> Descending, System.Nullable<int> StartIndex, System.Nullable<int> Count, string TitleRegEx, string RecGroup, string StorageGroup) {
            return base.Channel.GetRecordedList(Descending, StartIndex, Count, TitleRegEx, RecGroup, StorageGroup);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetRecordedListAsync(System.Nullable<bool> Descending, System.Nullable<int> StartIndex, System.Nullable<int> Count, string TitleRegEx, string RecGroup, string StorageGroup) {
            return base.Channel.GetRecordedListAsync(Descending, StartIndex, Count, TitleRegEx, RecGroup, StorageGroup);
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.TitleInfoList GetTitleInfoList() {
            return base.Channel.GetTitleInfoList();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.TitleInfoList> GetTitleInfoListAsync() {
            return base.Channel.GetTitleInfoListAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ArrayOfString GetTitleList() {
            return base.Channel.GetTitleList();
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ArrayOfString> GetTitleListAsync() {
            return base.Channel.GetTitleListAsync();
        }
        
        public babgvant.Emby.MythTv.MythTvDvr.ProgramList GetUpcomingList(System.Nullable<int> StartIndex, System.Nullable<int> Count, System.Nullable<bool> ShowAll) {
            return base.Channel.GetUpcomingList(StartIndex, Count, ShowAll);
        }
        
        public System.Threading.Tasks.Task<babgvant.Emby.MythTv.MythTvDvr.ProgramList> GetUpcomingListAsync(System.Nullable<int> StartIndex, System.Nullable<int> Count, System.Nullable<bool> ShowAll) {
            return base.Channel.GetUpcomingListAsync(StartIndex, Count, ShowAll);
        }
        
        public System.Nullable<bool> RemoveRecordSchedule(System.Nullable<uint> RecordId) {
            return base.Channel.RemoveRecordSchedule(RecordId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> RemoveRecordScheduleAsync(System.Nullable<uint> RecordId) {
            return base.Channel.RemoveRecordScheduleAsync(RecordId);
        }
        
        public System.Nullable<bool> RemoveRecorded(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.RemoveRecorded(ChanId, StartTime);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> RemoveRecordedAsync(System.Nullable<int> ChanId, System.Nullable<System.DateTime> StartTime) {
            return base.Channel.RemoveRecordedAsync(ChanId, StartTime);
        }
        
        public System.Nullable<bool> UpdateRecordSchedule(
                    System.Nullable<uint> RecordId, 
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder) {
            return base.Channel.UpdateRecordSchedule(RecordId, Title, Subtitle, Description, Category, StartTime, EndTime, SeriesId, ProgramId, ChanId, Station, FindDay, FindTime, Inactive, Season, Episode, Inetref, Type, SearchType, RecPriority, PreferredInput, StartOffset, EndOffset, DupMethod, DupIn, Filter, RecProfile, RecGroup, StorageGroup, PlayGroup, AutoExpire, MaxEpisodes, MaxNewest, AutoCommflag, AutoTranscode, AutoMetaLookup, AutoUserJob1, AutoUserJob2, AutoUserJob3, AutoUserJob4, Transcoder);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> UpdateRecordScheduleAsync(
                    System.Nullable<uint> RecordId, 
                    string Title, 
                    string Subtitle, 
                    string Description, 
                    string Category, 
                    System.Nullable<System.DateTime> StartTime, 
                    System.Nullable<System.DateTime> EndTime, 
                    string SeriesId, 
                    string ProgramId, 
                    System.Nullable<int> ChanId, 
                    string Station, 
                    System.Nullable<int> FindDay, 
                    string FindTime, 
                    System.Nullable<bool> Inactive, 
                    System.Nullable<uint> Season, 
                    System.Nullable<uint> Episode, 
                    string Inetref, 
                    string Type, 
                    string SearchType, 
                    System.Nullable<int> RecPriority, 
                    System.Nullable<uint> PreferredInput, 
                    System.Nullable<int> StartOffset, 
                    System.Nullable<int> EndOffset, 
                    string DupMethod, 
                    string DupIn, 
                    System.Nullable<uint> Filter, 
                    string RecProfile, 
                    string RecGroup, 
                    string StorageGroup, 
                    string PlayGroup, 
                    System.Nullable<bool> AutoExpire, 
                    System.Nullable<int> MaxEpisodes, 
                    System.Nullable<bool> MaxNewest, 
                    System.Nullable<bool> AutoCommflag, 
                    System.Nullable<bool> AutoTranscode, 
                    System.Nullable<bool> AutoMetaLookup, 
                    System.Nullable<bool> AutoUserJob1, 
                    System.Nullable<bool> AutoUserJob2, 
                    System.Nullable<bool> AutoUserJob3, 
                    System.Nullable<bool> AutoUserJob4, 
                    System.Nullable<int> Transcoder) {
            return base.Channel.UpdateRecordScheduleAsync(RecordId, Title, Subtitle, Description, Category, StartTime, EndTime, SeriesId, ProgramId, ChanId, Station, FindDay, FindTime, Inactive, Season, Episode, Inetref, Type, SearchType, RecPriority, PreferredInput, StartOffset, EndOffset, DupMethod, DupIn, Filter, RecProfile, RecGroup, StorageGroup, PlayGroup, AutoExpire, MaxEpisodes, MaxNewest, AutoCommflag, AutoTranscode, AutoMetaLookup, AutoUserJob1, AutoUserJob2, AutoUserJob3, AutoUserJob4, Transcoder);
        }
    }
}
